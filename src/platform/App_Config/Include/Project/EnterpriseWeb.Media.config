<?xml version="1.0"?>

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/">
  <sitecore>
    <settings>
      <!--
        Enable original file extensions for media.
      -->
      <setting name="Media.RequestExtension" set:value="" />
      <!-- Adding revision for cache busting images -->
      <setting name="Media.AlwaysAppendRevision" set:value="true" />
    </settings>
    <javaScriptServices>
      <!--
        IMAGE RESIZING WHITELIST
        Using Sitecore server-side media resizing (i.e. the `imageParams` or `srcSet` props on the `<Image/>` helper component)
        could expose your Sitecore server to a denial-of-service attack by rescaling an image with many arbitrary dimensions.
        In JSS resizing param sets that are unknown are rejected by a whitelist.

        Sets of image sizing parameters that are used in app components must be whitelisted here.
        If a param set is not whitelisted, the image will be returned _without resizing_.

        To determine the image parameters being used, look at the query string on the `src` of the rendered image, i.e. '/img.jpg?mw=100&h=72' -> mw=100,h=72
        Note: the parameter sets defined here are comma-delimited (,) instead of &-delimited like the query string. Multiple sets are endline-delimited.
       -->
      <allowedMediaParams>
        <!-- XML element name is arbitary, useful for organizing and patching -->
        <styleguide-image-sample>
          mw=100,mh=50
        </styleguide-image-sample>
        <styleguide-image-sample-adaptive>
          mw=300
          mw=100
        </styleguide-image-sample-adaptive>
      </allowedMediaParams>
    </javaScriptServices>
    <!--
      Media URLs resolving
      Tells Sitecore to not include the Sitecore server URL as part of the media requests, so that they are instead routed through Next.js rewrites (see next.config.js).
      This eliminates exposing the Sitecore server publicly.
    -->
    <layoutService>
      <configurations>
        <config name="jss">
          <rendering>
            <renderingContentsResolver>
              <IncludeServerUrlInMediaUrls>false</IncludeServerUrlInMediaUrls>
            </renderingContentsResolver>
          </rendering>
        </config>
      </configurations>
    </layoutService>
    
    <links>
      <urlBuilder>
        <lowercaseUrls>true</lowercaseUrls>
      </urlBuilder>
      <mediaUrlBuilder>
        <param>
          <lowercaseUrls ref="links/urlBuilder/lowercaseUrls">
            <patch:delete />
          </lowercaseUrls>
          <lowercaseUrls>false</lowercaseUrls>    
        </param>
      </mediaUrlBuilder>
    </links>

    <mediaLibrary>
      <mediaTypes>
        <mediaType extensions="ico">
          <patch:delete />
        </mediaType>
        <mediaType name="icon" extensions="ico">
          <mimeType>image/x-icon</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/image</sharedTemplate>
          <versionedTemplate>system/media/versioned/image</versionedTemplate>
        </mediaType>
        <mediaType name="PDF file" extensions="pdf">
          <forceDownload>false</forceDownload>
        </mediaType>
      </mediaTypes>
    </mediaLibrary>
    
  </sitecore>
</configuration>
