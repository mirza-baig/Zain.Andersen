<?xml version="1.0" encoding="utf-8" ?>
<!--

Purpose: This include file enables and configures the Editing foundation module.

This foundation module contains all of the features used while creation and edition of a content

To disable this file, change its extension to ".disabled".

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <settings>
            <!-- DRAG AND DROP ENABLED
           Specifies whether drag and drop with toolbox are enabled or not.
           Default value: true
           -->
            <setting name="XA.Foundation.Editing.DragAndDropEnabled" value="true" />
            <setting name="XA.Foundation.Editing.PlaceholderChromeDataCacheMaxSize" value="50MB" />
            <setting name="XA.Foundation.Editing.PlaceholderChromeDataCache.Enabled" value="true" />
            <setting name="XA.Foundation.Editing.DefaultRichTextProfile" value="/sitecore/system/Settings/Html Editor Profiles/Rich Text XA" />
        </settings>
        <experienceAccelerator>
            <editing>
                <placeholderChromeDataCache>
                    <template name="Placeholder" id="{5C547D4E-7111-4995-95B0-6B561751BF2E}">
                        <field name="Key" id="{7256BDAB-1FD2-49DD-B205-CB4873D2917C}"/>
                        <field name="AllowedControls" id="{E391B526-D0C5-439D-803E-17512EAE6222}"/>
                        <field name="Editable" id="{14D0728A-82F9-4B01-AB16-1FE1577CEDE2}"/>
                        <field name="DisplayName" id="{B5E02AD9-D56F-4C41-A065-A133DB87BDEB}"/>
                    </template>
                    <template name="_Renderings List" id="{BD94E83A-E66E-414D-B99C-6EBC8FF44F92}">
                        <field name="Renderings" id="{715AE6C0-71C8-4744-AB4F-65362D20AD65}"/>
                    </template>
                    <template name="WebEdit Button" id="{02404208-46D4-49BF-988B-EB363A52A1C9}"/>
                    <template name="_Shared Root" id="{F3F0CB13-B505-42DE-9649-4A9866A0B1A7}"/>
                </placeholderChromeDataCache>
            </editing>
        </experienceAccelerator>
        <pipelines>
            <initialize>
                <processor type="Sitecore.XA.Foundation.Editing.Pipelines.Initialize.InitializeEditing, Sitecore.XA.Foundation.Editing" resolve="true" />
            </initialize>
            <renderField>
                <processor patch:after="*[@type='Sitecore.Pipelines.RenderField.SetParameters, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.RenderField.SetWebEditingParameters, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:delete="*[@type='Sitecore.Pipelines.RenderField.AddBeforeAndAfterValues, Sitecore.Kernel']" />
                <processor patch:after="*[@type='Sitecore.Pipelines.RenderField.RenderWebEditing, Sitecore.Kernel']" type="Sitecore.Pipelines.RenderField.AddBeforeAndAfterValues, Sitecore.Kernel" resolve="true" />
                <processor patch:instead="*[@type='Sitecore.Pipelines.RenderField.RenderWebEditing, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.RenderField.RenderWebEditing, Sitecore.XA.Foundation.Editing" resolve="true" />
            </renderField>
            <getChromeData>
                <processor patch:after="*[@type='Sitecore.Pipelines.GetChromeData.GetFieldChromeData, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetPageLayout, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:after="*[@type='Sitecore.Pipelines.GetChromeData.GetFieldChromeData, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetFieldChromeData, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:after="*[@type='Sitecore.Pipelines.GetChromeData.GetRenderingChromeData, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.DisableEditingOnInjectedRenderings, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:instead="*[@type='Sitecore.Pipelines.GetChromeData.GetEditFrameChromeData, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetEditFrameChromeData, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:before="*[@type='Sitecore.Pipelines.GetChromeData.GetPlaceholderChromeData, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetPlaceholderKeyChromeData, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:instead="*[@type='Sitecore.Pipelines.GetChromeData.GetPlaceholderChromeData, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetPlaceholderChromeData, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:after="*[@type='Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetPlaceholderChromeData, Sitecore.XA.Foundation.Editing']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetMvcPlaceholderChromeData, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor patch:after="*[@type='Sitecore.FXM.Client.Pipelines.ExperienceEditor.GetChromeData.GetPlaceholdersChromeData, Sitecore.FXM.Client']" type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.RemoveFxmPlaceholderChromeButtons, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor type="Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetRichTextChromeData, Sitecore.XA.Foundation.Editing" resolve="true" />
            </getChromeData>
            <assetService>
                <processor type="Sitecore.XA.Foundation.Editing.Pipelines.AssetService.AddEditingTheme, Sitecore.XA.Foundation.Editing" resolve="true" />
                <processor type="Sitecore.XA.Foundation.Editing.Pipelines.AssetService.AddHorizonEditingTheme, Sitecore.XA.Foundation.Editing" resolve="true" />
            </assetService>
            <getControlEditability>
                <processor type="Sitecore.XA.Foundation.Editing.Pipelines.GetControlEditability.IsRenderingInCurrentItemRenderings, Sitecore.XA.Foundation.Editing" resolve="true" />
            </getControlEditability>
            <group groupName="ExperienceEditor" name="ExperienceEditor">
                <pipelines>
                    <getPageEditorNotifications>
                        <processor type="Sitecore.XA.Foundation.Editing.Pipelines.GetPageEditorNotifications.StandardValuesNotification, Sitecore.XA.Foundation.Editing" resolve="true" />
                    </getPageEditorNotifications>
                </pipelines>
            </group>
            <speak.client.resolveScript>
                <processor type="Sitecore.Resources.Pipelines.ResolveScript.Controls, Sitecore.Speak.Client">
                    <sources hint="raw:AddSource">
                        <source folder="/sitecore/shell/client/Sitecore/ExperienceAccelerator/ExperienceEditor" deep="true" category="sxa" pattern="*.js" />
                    </sources>
                </processor>
            </speak.client.resolveScript>
            <renderContentEditor>
                <processor patch:before="*[1]" type="Sitecore.XA.Foundation.Editing.Pipelines.RenderContentEditor.InjectContentEditorScripts, Sitecore.XA.Foundation.Editing">
                    <scripts hint="list:addScriptResource">
                        <resource>/sitecore/shell/Applications/Content Manager/SxaEditor.js</resource>
                    </scripts>
                </processor>
            </renderContentEditor>
            <resolveTokens>
                <processor type="Sitecore.XA.Foundation.Editing.Pipelines.ResolveTokens.ResolveEditingTokens, Sitecore.XA.Foundation.Editing" resolve="true" />
            </resolveTokens>
        </pipelines>
        <events>
            <event name="item:saved">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="ItemSaved" />
            </event>
            <event name="item:saved:remote">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="ItemSavedRemote" />
            </event>
            <event name="item:moved">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemMoved" />
            </event>
            <event name="item:moved:remote">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemMovedRemote" />
            </event>
            <event name="item:added">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemAdded" />
            </event>
            <event name="item:added:remote">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemAddedRemote" />
            </event>
            <event name="item:deleted">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemDeleted" />
            </event>
            <event name="item:deleted:remote">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemDeletedRemote" />
            </event>
            <event name="item:copied">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemCopied" />
            </event>
            <event name="item:copied:remote">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnItemCopiedRemote" />
            </event>
            <event name="sxaplaceholder:selected">
                <handler type="Sitecore.XA.Foundation.Editing.EventHandlers.PlaceholderChromeDataCacheClearer, Sitecore.XA.Foundation.Editing" method="OnPlaceholderSelected" />
            </event>
        </events>
        <services>
            <register serviceType="Sitecore.XA.Foundation.Editing.Service.IAvailableRenderingsOrderingService, Sitecore.XA.Foundation.Editing"
                      implementationType="Sitecore.XA.Foundation.Editing.Service.AvailableRenderingsOrderingService, Sitecore.XA.Foundation.Editing" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Editing.Service.IControlEditabilityService, Sitecore.XA.Foundation.Editing"
                      implementationType="Sitecore.XA.Foundation.Editing.Service.ControlEditabilityService, Sitecore.XA.Foundation.Editing" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Editing.Service.ICheckLimitedDeviceService, Sitecore.XA.Foundation.Editing"
                      implementationType="Sitecore.XA.Foundation.Editing.Service.CheckLimitedDeviceService, Sitecore.XA.Foundation.Editing" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Editing.Service.ILinksService, Sitecore.XA.Foundation.Editing"
                      implementationType="Sitecore.XA.Foundation.Editing.Service.LinksService, Sitecore.XA.Foundation.Editing" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Abstractions.Configuration.IConfiguration`1[[Sitecore.XA.Foundation.Editing.EditingConfiguration, Sitecore.XA.Foundation.Editing]], Sitecore.XA.Foundation.Abstractions"
                      implementationType="Sitecore.XA.Foundation.Editing.EditingConfigurationReader, Sitecore.XA.Foundation.Editing" lifetime="Singleton"/>
        </services>
        <commands>
            <command name="webedit:updatelayout" type="Sitecore.XA.Foundation.Editing.Commands.UpdateLayout, Sitecore.XA.Foundation.Editing" />
            <command name="webedit:insertimage" patch:instead="*[@name='webedit:insertimage']" type="Sitecore.XA.Foundation.Editing.Commands.InsertImage, Sitecore.XA.Foundation.Editing"/>
            <command name="webedit:insertlink" patch:instead="*[@name='webedit:insertlink']" type="Sitecore.XA.Foundation.Editing.Commands.InsertLink, Sitecore.XA.Foundation.Editing"/>
            <command name="webedit:chooseimage" patch:instead="*[@name='webedit:chooseimage']" type="Sitecore.XA.Foundation.Editing.Commands.ChooseImage, Sitecore.XA.Foundation.Editing"/>
            <command name="webedit:editlink" patch:instead="*[@name='webedit:editlink']" type="Sitecore.XA.Foundation.Editing.Commands.EditLink, Sitecore.XA.Foundation.Editing" />
            <command name="webedit:editinternallink" type="Sitecore.XA.Foundation.Editing.Commands.EditInternalLink, Sitecore.XA.Foundation.Editing" />
            <command name="webedit:followlink" type="Sitecore.XA.Foundation.Editing.Commands.FollowLink, Sitecore.XA.Foundation.Editing" />
            <command patch:instead="*[@name='webedit:delete']" name="webedit:delete" type="Sitecore.XA.Foundation.Editing.Commands.WebEditDelete, Sitecore.XA.Foundation.Editing" />
            <command name="sxawebedit:new" type="Sitecore.XA.Foundation.Editing.Commands.WebEditNew, Sitecore.XA.Foundation.Editing" />
            <command name="webedit:newfromfile" type="Sitecore.XA.Foundation.Editing.Commands.WebEditNewFromFile, Sitecore.XA.Foundation.Editing" />
            <command name="webedit:newitem" type="Sitecore.XA.Foundation.Editing.Commands.NewItem, Sitecore.XA.Foundation.Editing" />
            <command patch:instead="*[@name='item:preview']" name="item:preview" type="Sitecore.XA.Foundation.Editing.Commands.PreviewItem, Sitecore.XA.Foundation.Editing" />
            <command patch:instead="*[@name='webedit:openexperienceeditor']" name="webedit:openexperienceeditor" type="Sitecore.XA.Foundation.Editing.Commands.OpenExperienceEditor, Sitecore.XA.Foundation.Editing" />
            <command name="webedit:updatelayout" type="Sitecore.XA.Foundation.Editing.Commands.UpdateLayout, Sitecore.XA.Foundation.Editing" />
        </commands>
        <sitecore.experienceeditor.speak.requests>
            <request name="ExperienceEditor.XA.IsInSxaContext" type="Sitecore.XA.Foundation.Editing.Requests.IsInSxaContext, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.IsDragNDropEnabled" type="Sitecore.XA.Foundation.Editing.Requests.IsDragNDropEnabled, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.GetItemUrl" type="Sitecore.XA.Foundation.Editing.Requests.GetItemUrl, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.GetMenuIconLabel" type="Sitecore.XA.Foundation.Editing.Requests.GetMenuIconLabel, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.DoesItemExist" type="Sitecore.XA.Foundation.Editing.Requests.DoesItemExist, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.CanCreateItem" type="Sitecore.XA.Foundation.Editing.Requests.CanCreateItem, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.GetItemId" type="Sitecore.XA.Foundation.Editing.Requests.GetItemId, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.CanEditFields" type="Sitecore.XA.Foundation.Editing.Requests.CanEditFields, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.CanEditField" type="Sitecore.XA.Foundation.Editing.Requests.CanEditField, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.GetFieldEditorDialog" type="Sitecore.XA.Foundation.Editing.Requests.GetFieldEditorDialog, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.GetFieldEditorResult" type="Sitecore.XA.Foundation.Editing.Requests.GetFieldEditorResult, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.IsPublishingEnabled" type="Sitecore.XA.Foundation.Editing.Requests.IsPublishingEnabled, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.CheckWorkflow" type="Sitecore.XA.Foundation.Editing.Requests.CheckWorkflow, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.XA.CheckDeviceLimited" type="Sitecore.XA.Foundation.Editing.Requests.CheckLimitedDevice, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.ToggleRegistryKey.Get" patch:instead="*[@type='Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleRegistryKey.GetRegistryKeyRequest, Sitecore.ExperienceEditor.Speak.Ribbon']" type="Sitecore.XA.Foundation.Editing.Requests.GetRegistryKeyWithDefaultValue, Sitecore.XA.Foundation.Editing"/>
            <request name="ExperienceEditor.Mode.SelectModeRequest" patch:instead="*[@type='Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SelectMode.SelectModeRequest, Sitecore.ExperienceEditor.Speak.Ribbon']" type="Sitecore.XA.Foundation.Editing.Requests.SelectModeRequest, Sitecore.XA.Foundation.Editing"/>
            <request patch:instead="*[@type='Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.ExecuteRequest, Sitecore.ExperienceEditor.Speak.Ribbon']" name="ExperienceEditor.Delete.ExecuteRequest" type="Sitecore.XA.Foundation.Editing.Requests.ExecuteRequest, Sitecore.XA.Foundation.Editing" />
        </sitecore.experienceeditor.speak.requests>
        <customHandlers>
            <handler trigger="~/sxa-toolbox/" handler="/sitecore/shell/Applications/ExperienceAccelerator/sxa-toolbox-feed.ashx" />
        </customHandlers>
    </sitecore>
</configuration>