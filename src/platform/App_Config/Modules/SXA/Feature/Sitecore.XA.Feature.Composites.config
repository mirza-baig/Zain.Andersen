<?xml version="1.0" encoding="utf-8" ?>

<!--

Purpose: This include file enables and configures the Composites feature.

A composite rendering displays a list of items. Each of these items defines how it should be displayed. Each item has its own layout and it can be designed separately in the Experience Editor. 
Whenever a composite rendering is rendered on a page, it queries each item and pulls the data and the presentation from there. This allows you to build very complex layouts.

To disable this file, change its extension to ".disabled".

-->

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <settings>
            <setting name="XA.Feature.Composites.OnPageEditing" value="true" />
            <setting name="XA.Feature.Composites.CompositesXmlCacheMaxSize" value="50MB" />
            <setting name="XA.Feature.Composites.CompositeComponentLayoutPath" value="Composite Component Layout.cshtml" />
        </settings>
        <experienceAccelerator>
            <!-- List of renderings which are using dynamic placeholders -->
            <dynamicPlaceholders>
                <compatibleDynamicPlaceholderRenderings>
                    <group name="Composites">
                        <rendering id="{DEE8DDA7-AF00-48F6-9C60-19AB73EBA80D}" name="Accordion"/>
                        <rendering id="{5A21C781-8E74-4DD0-8261-8CCDA1BF0454}" name="Carousel"/>
                        <rendering id="{886B8CCC-816E-4D3A-BF05-4876B6C23686}" name="Tabs"/>
                        <rendering id="{00C953FE-D508-4836-96A4-CF60887AE5F1}" name="Flip"/>
                    </group>
                </compatibleDynamicPlaceholderRenderings>
            </dynamicPlaceholders>
            <!-- List of placeholders on which there shouldn't be possibility to add rendering -->
            <excludedPlaceholdersKeys>
                <placeholder name="accordioncontent">accordioncontent</placeholder>
                <placeholder name="accordionheading">accordionheading</placeholder>
                <placeholder name="mvcslider">mvcslider</placeholder>
                <placeholder name="tabheading">tabheading</placeholder>
                <placeholder name="tabcontent">tabcontent</placeholder>
            </excludedPlaceholdersKeys>
            <renderingVariants>
                <allowedTemplates>
                    <template name="Composite Section">{47D90B92-9BD8-4903-88C0-8012347592A4}</template>
                </allowedTemplates>
                <systemTemplates>
                    <template name="Composite Section">{47D90B92-9BD8-4903-88C0-8012347592A4}</template>
                </systemTemplates>
            </renderingVariants>
            <localDatasources>
                <pageRelativeLocationAllowedTemplates>
                    <template name="Composite Section">{47D90B92-9BD8-4903-88C0-8012347592A4}</template>
                </pageRelativeLocationAllowedTemplates>
            </localDatasources>
        </experienceAccelerator>
        <events>
            <event name="item:saving">
                <handler type="Sitecore.XA.Feature.Composites.EventHandlers.SaveCompositeItems, Sitecore.XA.Feature.Composites" method="OnItemSaving"/>
            </event>
            <event name="item:added">
                <handler patch:after="*[@type='Sitecore.Data.Fields.ItemEventHandler, Sitecore.Kernel']" type="Sitecore.XA.Feature.Composites.EventHandlers.CompositeItemHandler, Sitecore.XA.Feature.Composites" method="OnItemAdded" resolve="true"/>
            </event>
            <event name="item:copied">
                <handler patch:after="*[@type='Sitecore.Tasks.ItemEventHandler, Sitecore.Kernel']" type="Sitecore.XA.Feature.Composites.EventHandlers.CompositeItemHandler, Sitecore.XA.Feature.Composites" method="OnItemCopied" resolve="true"/>
            </event>
            <event name="publish:end">
                <handler type="Sitecore.XA.Feature.Composites.EventHandlers.CompositesXmlCacheClearer, Sitecore.XA.Feature.Composites" method="OnPublishEnd" />
            </event>
            <event name="publish:end:remote">
                <handler type="Sitecore.XA.Feature.Composites.EventHandlers.CompositesXmlCacheClearer, Sitecore.XA.Feature.Composites" method="OnPublishEnd" />
            </event>
            <event name="item:saved">
                <handler type="Sitecore.XA.Feature.Composites.EventHandlers.CompositesXmlCacheClearer, Sitecore.XA.Feature.Composites" method="OnItemSaved" />
            </event>
            <event name="item:moved">
                <handler type="Sitecore.XA.Feature.Composites.EventHandlers.CompositesXmlCacheClearer, Sitecore.XA.Feature.Composites" method="OnItemMoved" />
            </event>
            <event name="item:moved:remote">
                <handler type="Sitecore.XA.Feature.Composites.EventHandlers.CompositesXmlCacheClearer, Sitecore.XA.Feature.Composites" method="OnItemMovedRemote" />
            </event>
            <event name="item:saved:remote">
                <handler type="Sitecore.XA.Feature.Composites.EventHandlers.CompositesXmlCacheClearer, Sitecore.XA.Feature.Composites" method="OnItemSavedRemote" />
            </event>
        </events>
        <pipelines>
            <mvc.getXmlBasedLayoutDefinition>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetXmlBasedLayoutDefinition.InjectCompositeComponents, Sitecore.XA.Feature.Composites" patch:after="*[@type='Sitecore.Mvc.Pipelines.Response.GetXmlBasedLayoutDefinition.GetFromLayoutField, Sitecore.Mvc']" resolve="true"/>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetXmlBasedLayoutDefinition.SetOnPageEditingContext, Sitecore.XA.Feature.Composites"  patch:after="*[@type='Sitecore.XA.Feature.Composites.Pipelines.GetXmlBasedLayoutDefinition.InjectCompositeComponents, Sitecore.XA.Feature.Composites']"/>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetXmlBasedLayoutDefinition.HandleCompositesPostback, Sitecore.XA.Feature.Composites"  patch:before="*[@type='Sitecore.XA.Feature.Composites.Pipelines.GetXmlBasedLayoutDefinition.SetOnPageEditingContext, Sitecore.XA.Feature.Composites']"/>
            </mvc.getXmlBasedLayoutDefinition>
            <mvc.getCompositeXmlBasedLayoutDefinition>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetXmlBasedLayoutDefinition.GetCompositePageDesigningLayout, Sitecore.XA.Feature.Composites"/>
                <processor type="Sitecore.Mvc.Pipelines.Response.GetXmlBasedLayoutDefinition.GetFromLayoutField, Sitecore.Mvc"/>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetXmlBasedLayoutDefinition.InjectCompositeComponents, Sitecore.XA.Feature.Composites" resolve="true"/>
                <processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.Response.GetXmlBasedLayoutDefinition.SetLayoutContext, Sitecore.Mvc.ExperienceEditor"/>
            </mvc.getCompositeXmlBasedLayoutDefinition>
            <getPlaceholderRenderings>
                <!-- Sitecore XP 10.2.1.009116+ -->
                <processor patch:after="*[@type='Sitecore.ExperienceEditor.Pipelines.GetPlaceholderRenderings.GetAllowedRenderings, Sitecore.ExperienceEditor']" type="Sitecore.XA.Feature.Composites.Pipelines.GetPlaceholderRenderings.FilterRenderingsNew, Sitecore.XA.Feature.Composites" resolve="true" />
                <!-- Sitecore XP 10.2.0 -->
                <processor patch:after="*[@type='Sitecore.Pipelines.GetPlaceholderRenderings.GetAllowedRenderings, Sitecore.Kernel']" type="Sitecore.XA.Feature.Composites.Pipelines.GetPlaceholderRenderings.FilterRenderings, Sitecore.XA.Feature.Composites" resolve="true" />
            </getPlaceholderRenderings>
            <getControlEditability>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetControlEditability.RenderingIsFromComposite, Sitecore.XA.Feature.Composites" resolve="true" />
            </getControlEditability>
            <assetService>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.AssetService.AddGridTheme, Sitecore.XA.Feature.Composites" resolve="true" />
            </assetService>
            <getFrontEndLayoutDefinition>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetFrontEndLayoutDefinition.InitializeLayoutModel, Sitecore.XA.Feature.Composites" />
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetFrontEndLayoutDefinition.InjectCompositeComponents, Sitecore.XA.Feature.Composites" resolve="true"/>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetFrontEndLayoutDefinition.AddCompositePlaceholderSettings, Sitecore.XA.Feature.Composites" resolve="true"/>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.GetFrontEndLayoutDefinition.RemoveAnnotations, Sitecore.XA.Feature.Composites" resolve="true"/>
            </getFrontEndLayoutDefinition>
            <mvc.renderPageExtenders>
                <processor patch:after="*[@type='Sitecore.Mvc.ExperienceEditor.Pipelines.RenderPageExtenders.SpeakRibbon.RenderPageEditorSpeakExtender, Sitecore.Mvc.ExperienceEditor']"
                           type="Sitecore.XA.Feature.Composites.Pipelines.RenderPageExtenders.InjectFrontEndLayoutDefinition, Sitecore.XA.Feature.Composites" resolve="true" />
            </mvc.renderPageExtenders>
            <getChromeData>
                <processor patch:after="*[@type='Sitecore.XA.Foundation.Editing.Pipelines.GetChromeData.GetMvcPlaceholderChromeData, Sitecore.XA.Foundation.Editing']" type="Sitecore.XA.Feature.Composites.Pipelines.GetChromeData.EnableEditingOfInjectedCompositeRenderings, Sitecore.XA.Feature.Composites" resolve="true" />
            </getChromeData>
            <getVariants>
                <processor patch:before="*[1]" type="Sitecore.XA.Feature.Composites.Pipelines.GetVariants.SwitchPageTemplateId, Sitecore.XA.Feature.Composites" resolve="true" />
            </getVariants>
            <checkTestableRendering>
                <processor type="Sitecore.XA.Feature.Composites.Pipelines.CheckTestableRendering.DisableCompositesTesting, Sitecore.XA.Feature.Composites" resolve="true"/>
            </checkTestableRendering>
        </pipelines>
        <services>
            <register serviceType="Sitecore.XA.Feature.Composites.Controllers.AccordionController, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Controllers.AccordionController, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Controllers.CarouselController, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Controllers.CarouselController, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Controllers.CompositeComponentController, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Controllers.CompositeComponentController, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Controllers.FlipController, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Controllers.FlipController, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Controllers.SnippetController, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Controllers.SnippetController, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Controllers.TabsController, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Controllers.TabsController, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Repositories.IAccordionRepository, Sitecore.XA.Feature.Composites"
                      implementationType="Sitecore.XA.Feature.Composites.Repositories.AccordionRepository, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Repositories.ICarouselRepository, Sitecore.XA.Feature.Composites"
                      implementationType="Sitecore.XA.Feature.Composites.Repositories.CarouselRepository, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Repositories.ICompositeComponentRepository, Sitecore.XA.Feature.Composites"
                      implementationType="Sitecore.XA.Feature.Composites.Repositories.CompositeComponentRepository, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Repositories.IFlipRepository, Sitecore.XA.Feature.Composites"
                      implementationType="Sitecore.XA.Feature.Composites.Repositories.FlipRepository, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Repositories.ISnippetRepository, Sitecore.XA.Feature.Composites"
                      implementationType="Sitecore.XA.Feature.Composites.Repositories.SnippetRepository, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Repositories.ITabsRepository, Sitecore.XA.Feature.Composites"
                      implementationType="Sitecore.XA.Feature.Composites.Repositories.TabsRepository, Sitecore.XA.Feature.Composites" lifetime="Transient"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Services.IOnPageEditingContextService, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Services.OnPageEditingContextService, Sitecore.XA.Feature.Composites" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Feature.Composites.Services.ICompositeService, Sitecore.XA.Feature.Composites" implementationType="Sitecore.XA.Feature.Composites.Services.CompositeService, Sitecore.XA.Feature.Composites" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Abstractions.Configuration.IConfiguration`1[[Sitecore.XA.Feature.Composites.CompositesConfiguration, Sitecore.XA.Feature.Composites]], Sitecore.XA.Foundation.Abstractions"
                      implementationType="Sitecore.XA.Feature.Composites.CompositesConfigurationReader, Sitecore.XA.Feature.Composites" lifetime="Singleton"/>
        </services>
        <contentSearch>
            <indexConfigurations>
                <defaultSolrIndexConfiguration type="Sitecore.ContentSearch.SolrProvider.SolrIndexConfiguration, Sitecore.ContentSearch.SolrProvider" >
                    <documentOptions type="Sitecore.ContentSearch.SolrProvider.SolrDocumentBuilderOptions, Sitecore.ContentSearch.SolrProvider">
                        <exclude hint="list:AddExcludedTemplate">
                            <AccordionItem>{A6DDAC75-7D24-4BDB-B3F6-5F47FBB21379}</AccordionItem>
                            <CarouselSlide>{142E5FC1-EC62-4540-BAD9-CD88F337CD2E}</CarouselSlide>
                            <Flipside>{36F45117-539A-4A13-ABF8-F1F74CB4B249}</Flipside>
                            <TabItem>{B27059E6-1190-4273-92A0-D22AF3C440B4}</TabItem>
                        </exclude>
                    </documentOptions>
                </defaultSolrIndexConfiguration>
                <defaultLuceneIndexConfiguration type="Sitecore.ContentSearch.LuceneProvider.LuceneIndexConfiguration, Sitecore.ContentSearch.LuceneProvider">
                    <documentOptions type="Sitecore.ContentSearch.LuceneProvider.LuceneDocumentBuilderOptions, Sitecore.ContentSearch.LuceneProvider">
                        <exclude hint="list:AddExcludedTemplate">
                            <AccordionItem>{A6DDAC75-7D24-4BDB-B3F6-5F47FBB21379}</AccordionItem>
                            <CarouselSlide>{142E5FC1-EC62-4540-BAD9-CD88F337CD2E}</CarouselSlide>
                            <Flipside>{36F45117-539A-4A13-ABF8-F1F74CB4B249}</Flipside>
                            <TabItem>{B27059E6-1190-4273-92A0-D22AF3C440B4}</TabItem>
                        </exclude>
                    </documentOptions>
                </defaultLuceneIndexConfiguration>
            </indexConfigurations>
        </contentSearch>
        <mvc>
            <precompilation>
                <assemblies>
                    <assemblyIdentity name="Sitecore.XA.Feature.Composites" />
                </assemblies>
            </precompilation>
        </mvc>
        <sitecore.experienceeditor.speak.requests>
            <request name="ExperienceEditor.Datasources.GetDatasourceUsagesWithLockedStatus">
                <patch:attribute name="type">Sitecore.XA.Feature.Composites.Requests.GetDatasourceUsagesWithLockedStatus, Sitecore.XA.Feature.Composites</patch:attribute>
            </request>
        </sitecore.experienceeditor.speak.requests>
        <commands>
            <command patch:instead="*[@name='item:checkin']" name="item:checkin" type="Sitecore.XA.Feature.Composites.Commands.CheckIn, Sitecore.XA.Feature.Composites" />
        </commands>
    </sitecore>
</configuration>