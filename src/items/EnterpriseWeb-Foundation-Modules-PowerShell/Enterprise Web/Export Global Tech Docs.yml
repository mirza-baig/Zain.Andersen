---
ID: "b298af5e-80d8-4f1d-96f8-6959291707b1"
Parent: "eef2a43f-bc59-4016-a77d-10e37bc5158f"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Enterprise Web/Export Global Tech Docs
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function parseItems($data, $fieldName = 'Title', $type = '') {
        if ([string]::IsNullOrEmpty($data)) {
            return "";
        }
        else {
    #        write-host("$data" + $data)
    #        write-host( $fieldName)
    #        write-host( $type)
            $lookupItems = $data.split('|')
            $val = ""
            foreach ($lookup in $lookupItems) {
     #           write-host("$lookup" + $lookup)
                if (![string]::IsNullOrEmpty($lookup)) {
                    $facet = Get-Item $lookup
     #               write-host($facet.ID)
                    if ($type -eq 'property') {
                        $val += $facet.$fieldName + ","
                    }
                    else {
                        $val += $facet[$fieldName] + ","
                    }
                }
            }    
            return $val.Substring(0, $val.Length - 1);
        }    
    }
    
    function getMediaId($id)
    {
        try{
            if($id.Contains("modified"))
            {
                $id = $id.Substring(0,$id.IndexOf("?"))
            }
            return (Get-Item $id).Id;
        }
        catch{
            return "";
        }
        
    }
    
    $techDocRoot = Get-Item "/sitecore/content/global/data/technical-documents"
    
    $tecDocs = $techDocRoot.Axes.GetDescendants() | Where-Object { $_.TemplateName -eq 'Technical Document' } 
    
    $result = New-Object System.Collections.Generic.List[PSObject]
        
    foreach ($item in $tecDocs) {
        
        #write-host((Get-Item $item['File']).Id)
    
        $obj = New-Object PSObject @{
            documentId              = $item.id;
            documentName            = $item.name;
            documentPath            = $item.Paths.FullPath;
            documentEyebrow         = $item['Page Type'];
            documentTitle           = $item['Title'];
            documentDescription     = $item['Description'];
            documentNumber          = $item['Document Number'];
            documentType            = parseItems $item['Document Type'];
            documentSite            = parseItems $item['Site'] 'Name' 'property';
            documentLanguage        = parseItems $item['Document Language'];
            document                = getMediaId($item['File']);
            documentFile            = $item['File'];
            productSeries           = parseItems $item['Product Series'];
            windowType              = parseItems $item['Product Type Window'];
            doorType                = parseItems $item['Product Type Door'];
            productOptions          = parseItems $item['Product Option Accessory and Part'];
            awningType              = parseItems $item['Awning Type'];
            casementType            = parseItems $item['Casement Type'];
            doubleHungType          = parseItems $item['Double-hung Type'];
            specialtyType           = parseItems $item['Specialty Type'];
            stormDoorType           = parseItems $item['Storm Door Type'];
            doorSwing               = parseItems $item['Door Swing'];
            productStatus           = parseItems $item['Product Status'];
            productBrand            = parseItems $item['Product Brand'];
            environmentDocumentType = parseItems $item['Environmental Document Type'];
            installationMethods     = parseItems $item['Installation Guide Product Installation Method'];
            installationGuideType   = parseItems $item['Installation Guide Type'];
            performanceDocumentType = parseItems $item['Performance Document Type'];
            serviceGuideType        = parseItems $item['Service Guide Type'];
            sizingDocumentType      = parseItems $item['Sizing Document Type'];
            joiningType             = parseItems $item['Joining Type'];
        } 
        $result.Add($obj)
    }
    
    $result | Show-ListView -Property documentId, documentName, documentPath, documentEyebrow, documentTitle, documentDescription, documentNumber, documentType, documentSite, documentLanguage, document, documentFile, productSeries, windowType, doorType, productOptions, awningType, casementType, doubleHungType, specialtyType, stormDoorType, doorSwing, productStatus, productBrand, environmentDocumentType, installationMethods, installationGuideType, performanceDocumentType, serviceGuideType, sizingDocumentType, joiningType
    
    
    
    #$result | Show-ListView $reportProps -Property @{ Name = “Name”; Expression = { $_.documentTitle } },
    #   @{ Name = “Path”; Expression = { $_.documentDescription} },
    #  @{ Name = “ID”; Expression = { $_.documentEyebrow} }
    
    #$item = Get-Item "{3B3BE6D1-499C-4A34-830C-964B1867F08A}"
    #write-host ($item.description)
    #write-host ($item["page type"])
    
    #$tecDocs | Show-ListView -Property Name, Title, Description
    
    #$tecDocs | Show-ListView -Property @{Label="documentTitle"; Expression={$_.Title} }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20230818T041837Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\Admin
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "b84909e9-94d8-4c24-aa7e-875984d8b041"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\Admin
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20230828T163157Z
